import { IAuth, AuthEvent, AuthCallback, AuthorizeOptions, LogoutOptions } from '@8base-js-sdk/auth';
import { IExtendedAuthOptions, IGraphQLAuth, IUser, UserCreate } from './types';
export declare class ExtendedAuth implements IAuth, IGraphQLAuth {
    private readonly api;
    private readonly auth;
    private readonly authProfileId;
    constructor(options: IExtendedAuthOptions);
    authorize(provider?: string, options?: AuthorizeOptions): void;
    getAuthorizedData(): Promise<import("auth0-js").Auth0DecodedHash | null>;
    refreshToken(): Promise<import("auth0-js").Auth0DecodedHash | null>;
    forgotPassword(email: string): Promise<string>;
    signOut(options?: LogoutOptions): void;
    on(event: AuthEvent, callback: AuthCallback): void;
    signIn(email: string, password: string): Promise<{
        idToken: string;
        refreshToken: string;
    } | null>;
    signUp(user: UserCreate, password: string): Promise<IUser | null>;
    signUpWithToken(user: UserCreate, token: string): Promise<IUser | null>;
}
//# sourceMappingURL=ExtendedAuth.d.ts.map