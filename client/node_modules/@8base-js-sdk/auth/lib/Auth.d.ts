import { AuthCallback, AuthEvent, AuthOptions, IAuth, IAuthStorageState, IStorage } from './types';
import { Auth0DecodedHash, AuthorizeOptions, LogoutOptions } from 'auth0-js';
import { StorageFacade } from './StorageFacade';
export declare class Auth implements IAuth {
    readonly storage?: StorageFacade<IAuthStorageState>;
    private readonly authStrategy;
    private readonly emitter;
    constructor(options: AuthOptions, storage?: IStorage, storageKey?: string);
    on(event: AuthEvent, callback: AuthCallback): void;
    authorize(provider?: string, options?: AuthorizeOptions): void;
    getAuthorizedData(): Promise<Auth0DecodedHash | null>;
    refreshToken(): Promise<Auth0DecodedHash | null>;
    forgotPassword(email: string): Promise<string>;
    signOut(options?: LogoutOptions): void;
    private subscribeOnEvents;
}
//# sourceMappingURL=Auth.d.ts.map